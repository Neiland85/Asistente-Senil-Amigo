name: CI/CD

on:
  push:
    branches:
      - dev
  pull_request:
    branches:
      - dev

jobs:
  build-lint-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Install dependencies
        run: npm ci
      - name: Lint
        run: npm run lint
      - name: Test
        run: npm test
      - name: Build
        run: npm run build

  deploy-vercel:
    needs: build-lint-test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/dev'
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Install dependencies
        run: npm ci
      - name: Validate Vercel Secrets
        run: |
          set -e
          missing_secrets=()
          if [ -z "$VERCEL_ORG_ID" ]; then
            missing_secrets+=("VERCEL_ORG_ID")
          fi
          if [ -z "$VERCEL_PROJECT_ID" ]; then
            missing_secrets+=("VERCEL_PROJECT_ID")
          fi
          if [ -z "$VERCEL_TOKEN" ]; then
            missing_secrets+=("VERCEL_TOKEN")
          fi
          if [ ${#missing_secrets[@]} -ne 0 ]; then
            echo "Deployment stopped: the following Vercel secrets are missing: ${missing_secrets[@]}" >&2
            exit 1
          fi
        env:
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
      - name: Debug Vercel Secrets
        run: |
          echo "ORG_ID length: ${#VERCEL_ORG_ID}"
          echo "PROJECT_ID length: ${#VERCEL_PROJECT_ID}"
          echo "TOKEN length: ${#VERCEL_TOKEN}"
        env:
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
      - name: Deploy to Vercel
        env:
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
        run: |
          npx vercel pull --yes --environment=preview --token=$VERCEL_TOKEN
          npx vercel build --token=$VERCEL_TOKEN
          npx vercel deploy --prebuilt --token=$VERCEL_TOKEN
